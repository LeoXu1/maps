{"version":3,"sources":["MapChart.js","CityResults.js","App.js","filterCities.js","index.js"],"names":["MapChart","setTooltipContent","coords","data-tip","projection","geography","geographies","map","geo","stroke","strokeWidth","fill","rsmKey","coordinates","strokeLinecap","strokeLinejoin","transform","cx","cy","r","d","memo","CityResults","lng","lat","loc","this","props","citySelect","className","cityData","onClick","handleClick","city","state_id","population","id","React","Component","App","handleSearchChange","event","setState","state","target","name","value","handleCityClick","query","selectedState","numResults","type","onChange","allStates","val","searchText","stateSearch","maxResults","citiesList","filter","toLowerCase","includes","state_name","slice","rootElement","document","getElementById","ReactDOM","render"],"mappings":"6xg1RAYMA,EAAW,SAAC,GAAgC,EAA/BC,kBAAgC,IAAbC,EAAY,EAAZA,OACpC,OACE,mCACE,cAAC,gBAAD,CAAeC,WAAS,GAAGC,WAAW,eAAtC,SACE,eAAC,gBAAD,WACE,cAAC,cAAD,CAAaC,UAPrB,0DAOQ,SACG,qBAAGC,YACUC,KAAI,SAAAC,GAAG,OACjB,cAAC,YAAD,CAEEC,OAAO,OACPC,YAAY,MACZL,UAAWG,EACXG,KAAM,WAJDH,EAAII,cAUjB,cAAC,SAAD,CAAQC,YAAaX,EAArB,SACA,oBACES,KAAK,OACLF,OAAO,UACPC,YAAY,IACZI,cAAc,QACdC,eAAe,QACfC,UAAU,sBANZ,UAQE,wBAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAMC,EAAE,iFASLC,iBAAKrB,G,kBC/CCsB,E,iKAEnB,SAAYC,EAAKC,GACf,IAAMC,EAAM,CAACF,EAAKC,GAClBE,KAAKC,MAAMC,WAAWH,K,oBAGxB,WAAU,IAAD,OACP,OACE,qBAAKI,UAAU,cAAf,SACGH,KAAKC,MAAMG,SAASvB,KAAI,SAAAuB,GAAQ,OAC/B,sBAEAC,QAAS,kBAAM,EAAKC,YAAYF,EAASP,IAAKO,EAASN,MACvDK,UAAU,YAHV,UAIE,+BAAKC,EAASG,KAAd,KAAsBH,EAASI,YAC/B,6BAAKJ,EAASK,eAJXL,EAASM,a,GAZiBC,IAAMC,W,QCK1BC,E,kDACnB,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IASRa,mBAAqB,SAAAC,GACnB,EAAKC,SAAL,2BACK,EAAKC,OADV,kBAEGF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,UAbnB,EAiBnBC,gBAAkB,SAAAtB,GAChB,EAAKiB,SAAS,CACZxC,OAAQuB,KAjBV,EAAKkB,MAAQ,CACXzC,OAAQ,EAAE,SAAU,SACpB8C,MAAO,GACPC,cAAe,GACfC,WAAY,IANG,E,0CAuBnB,WACE,OACE,sBAAKrB,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACE,wCACA,sBAAKA,UAAU,SAAf,UACE,uBAAOsB,KAAK,OAAON,KAAK,QAAQO,SAAU1B,KAAKc,qBAC/C,wBAAQK,KAAK,gBAAgBO,SAAU1B,KAAKc,mBAA5C,SACGa,EAAU9C,KAAI,SAAAoC,GAAK,OAClB,iCAAyBA,EAAMP,IAAlBO,EAAMW,UAGvB,yBAAQT,KAAK,aAAaO,SAAU1B,KAAKc,mBAAzC,UACE,wCACA,wCACA,wCACA,4CAEF,iDAEF,cAAC,EAAD,CACAZ,WAAYF,KAAKqB,gBACjBjB,UCpD2ByB,EDoDJ7B,KAAKiB,MAAMK,MCpDKQ,EDoDC9B,KAAKiB,MAAMM,cCpDCQ,EDoDa/B,KAAKiB,MAAMO,WCnD7EQ,EACJC,QAAO,SAAA1B,GACN,SAAIA,EAAKA,KAAK2B,cAAcC,SAASN,EAAWK,iBACzC3B,EAAK6B,WAAWF,cAAcC,SAASL,EAAYI,mBAK3DG,MAAM,EAAGN,SD8CN,sBAAK5B,UAAU,YAAf,UACE,qCACA,cAAC,EAAD,CAAU3B,OAAQwB,KAAKiB,MAAMzC,eCzDxB,IAAsBqD,EAAYC,EAAaC,M,GDM7BpB,IAAMC,WEHjC0B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.81126d45.chunk.js","sourcesContent":["import React, { memo } from \"react\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl =\r\n  \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\r\n\r\nconst MapChart = ({setTooltipContent, coords}) => {\r\n  return (\r\n    <>\r\n      <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  stroke='#aaa'\r\n                  strokeWidth='0.5'\r\n                  geography={geo}\r\n                  fill={\"#d6d6d6\"}\r\n                />\r\n\r\n              ))\r\n            }\r\n          </Geographies>\r\n          <Marker coordinates={coords}>\r\n          <g\r\n            fill=\"none\"\r\n            stroke=\"#FF5533\"\r\n            strokeWidth=\"2\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            transform=\"translate(-12, -24)\"\r\n          >\r\n            <circle cx=\"12\" cy=\"10\" r=\"3\" />\r\n            <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\r\n          </g>\r\n          </Marker>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MapChart);\r\n","import React from 'react';\r\nimport \"./CityResults.css\"\r\n\r\nexport default class CityResults extends React.Component {\r\n\r\n  handleClick(lng, lat) {\r\n    const loc = [lng, lat]\r\n    this.props.citySelect(loc)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"resultsList\">\r\n        {this.props.cityData.map(cityData => (\r\n          <div\r\n          key={cityData.id}\r\n          onClick={() => this.handleClick(cityData.lng, cityData.lat)}\r\n          className=\"cityEntry\">\r\n            <h5>{cityData.city}, {cityData.state_id}</h5>\r\n            <h5>{cityData.population}</h5>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport './App.css';\nimport \"./styles.css\";\nimport MapChart from \"./MapChart\";\nimport filterCities from \"./filterCities\"\nimport CityResults from \"./CityResults\"\nimport allStates from \"./allStates.json\"\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coords: [-149.1091, 61.1508],\n      query: \"\",\n      selectedState: \"\",\n      numResults: 20\n    };\n  }\n\n  handleSearchChange = event => {\n    this.setState({\n      ...this.state,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleCityClick = loc => {\n    this.setState({\n      coords: loc\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"base\">\n        <div className=\"container\">\n          <h1>Search</h1>\n          <div className=\"header\">\n            <input type=\"text\" name=\"query\" onChange={this.handleSearchChange}/>\n            <select name=\"selectedState\" onChange={this.handleSearchChange}>\n              {allStates.map(state => (\n                <option key={state.val}>{state.id}</option>\n              ))}\n            </select>\n            <select name=\"numResults\" onChange={this.handleSearchChange}>\n              <option>20</option>\n              <option>50</option>\n              <option>75</option>\n              <option>100</option>\n            </select>\n            <span>Population</span>\n          </div>\n          <CityResults\n          citySelect={this.handleCityClick}\n          cityData={filterCities(this.state.query,this.state.selectedState,this.state.numResults)}\n          />\n        </div>\n        <div className=\"container\">\n          <h1>Map</h1>\n          <MapChart coords={this.state.coords}/>\n        </div>\n      </div>\n    );\n  }\n}\n","import citiesList from \"./citiesList.json\";\r\n\r\nexport default function filterCities(searchText, stateSearch, maxResults) {\r\n  return citiesList\r\n    .filter(city => {\r\n      if (city.city.toLowerCase().includes(searchText.toLowerCase())\r\n          && city.state_name.toLowerCase().includes(stateSearch.toLowerCase())) {\r\n        return true;\r\n      }\r\n      return false;\r\n    })\r\n    .slice(0, maxResults);\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}