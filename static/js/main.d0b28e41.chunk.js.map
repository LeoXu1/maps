{"version":3,"sources":["MapChart.js","filterCities.js","CityResults.js","App.js","index.js"],"names":["MapChart","data-tip","projection","geography","geographies","map","geo","stroke","stroke-width","fill","rsmKey","memo","filterCities","searchText","maxResults","citiesList","filter","city","toLowerCase","includes","slice","CityResults","this","props","cityData","state_id","React","Component","App","handleSearchChange","event","setState","filteredCities","target","value","state","class","type","onChange","rootElement","document","getElementById","ReactDOM","render"],"mappings":"ut90RAWMA,EAAW,WACf,OACE,mCACE,cAAC,gBAAD,CAAeC,WAAS,GAAGC,WAAW,eAAtC,SACE,cAAC,gBAAD,UACE,cAAC,cAAD,CAAaC,UAPrB,0DAOQ,SACG,qBAAGC,YACUC,KAAI,SAAAC,GAAG,OACjB,cAAC,YAAD,CAEEC,OAAO,OACPC,eAAa,MACbL,UAAWG,EACXG,KAAM,WAJDH,EAAII,qBAgBZC,iBAAKX,G,QClCL,SAASY,EAAaC,EAAYC,GAC/C,OAAOC,EACJC,QAAO,SAAAC,GACN,QAAIA,EAAKA,KAAKC,cAAcC,SAASN,EAAWK,kBAKjDE,MAAM,EAAGN,G,ICROO,E,4JACnB,WACE,OACE,8BACGC,KAAKC,MAAMC,SAASnB,KAAI,SAAAmB,GAAQ,OAC/B,8BACE,+BAAKA,EAASP,KAAd,KAAsBO,EAASC,uB,GANFC,IAAMC,WCM1BC,E,kDACnB,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IAMRM,mBAAqB,SAAAC,GACnB,EAAKC,SAAS,CACZC,eAAgBpB,EAAakB,EAAMG,OAAOC,MAAO,OAPnD,EAAKC,MAAQ,CACXH,eAAgBpB,EAAa,GAAI,KAHlB,E,0CAanB,WACE,OACE,sBAAKwB,MAAM,OAAX,UACE,sBAAKA,MAAM,YAAX,UACE,wCACA,uBAAOC,KAAK,OAAOC,SAAUhB,KAAKO,qBAClC,cAAC,EAAD,CAAaL,SAAUF,KAAKa,MAAMH,oBAEpC,sBAAKI,MAAM,YAAX,UACE,qCACA,cAAC,EAAD,c,GAxBuBV,IAAMC,WCHjCY,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.d0b28e41.chunk.js","sourcesContent":["import React, { useState, memo } from \"react\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl =\r\n  \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\r\n\r\nconst MapChart = () => {\r\n  return (\r\n    <>\r\n      <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  stroke='#aaa'\r\n                  stroke-width='0.5'\r\n                  geography={geo}\r\n                  fill={\"#d6d6d6\"}\r\n                />\r\n\r\n              ))\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MapChart);\r\n","import citiesList from \"./citiesList.json\";\r\n\r\nexport default function filterCities(searchText, maxResults) {\r\n  return citiesList\r\n    .filter(city => {\r\n      if (city.city.toLowerCase().includes(searchText.toLowerCase())) {\r\n        return true;\r\n      }\r\n      return false;\r\n    })\r\n    .slice(0, maxResults);\r\n}\r\n","import React from 'react';\r\n\r\nexport default class CityResults extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.cityData.map(cityData => (\r\n          <div>\r\n            <h5>{cityData.city}, {cityData.state_id}</h5>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport './App.css';\nimport \"./styles.css\";\nimport MapChart from \"./MapChart\";\nimport filterCities from \"./filterCities\"\nimport CityResults from \"./CityResults\"\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredCities: filterCities(\"\", 20)\n    };\n  }\n\n  handleSearchChange = event => {\n    this.setState({\n      filteredCities: filterCities(event.target.value, 20)\n    });\n  };\n\n  render() {\n    return (\n      <div class=\"base\">\n        <div class=\"container\">\n          <h1>Search</h1>\n          <input type=\"text\" onChange={this.handleSearchChange}/>\n          <CityResults cityData={this.state.filteredCities} />\n        </div>\n        <div class=\"container\">\n          <h1>Map</h1>\n          <MapChart />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}