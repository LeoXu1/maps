{"version":3,"sources":["CityResults.js","App.js","filterCities.js","index.js"],"names":["CityResults","id","lng","lat","cty","st","ct","info","loc","city","stateID","county","this","props","citySelect","setInfo","className","cityData","map","onClick","handleClick","ID","LONGITUDE","LATITUDE","CITY","STATE_CODE","COUNTY","showMore","showLess","React","Component","App","handleSizeChange","event","setState","size","target","value","handleStateChange","selectedState","selectedCounty","handleSearchChange","name","state","handleCityClick","coords","some","l","newCoords","concat","localStorage","setItem","JSON","stringify","handleMapClick","query","isSelected","setContent","content","tooltip","mode","numResults","cities","getItem","parse","err","filter","removeItem","searchText","stateSearch","countySearch","maxResults","onChange","allStates","val","countiesList","state_name","county_name","fips","type","placeholder","clearSearch","citiesList","toLowerCase","includes","STATE_NAME","slice","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.091606b3.chunk.js","sourcesContent":["import React from 'react';\nimport \"./CityResults.css\"\n\nexport default class CityResults extends React.Component {\n\n  handleClick(id, lng, lat, cty, st, ct) {\n    const info = {\n      id: id,\n      loc: [lng, lat],\n      city: cty,\n      stateID: st,\n      county: ct,\n    }\n    this.props.citySelect(info)\n    this.props.setInfo(info)\n  }\n\n  render() {\n    return (\n      <div className=\"resultsList\">\n        {this.props.cityData.map(cityData => (\n          <div\n          key={cityData.ID}\n          onClick={() => this.handleClick(cityData.ID, cityData.LONGITUDE,\n            cityData.LATITUDE, cityData.CITY, cityData.STATE_CODE,\n            cityData.COUNTY)}\n          className=\"cityEntry\">\n            <h4>{cityData.CITY}, {cityData.STATE_CODE} ({cityData.COUNTY})</h4>\n          </div>\n        ))}\n        <button onClick={this.props.showMore}>Show More</button>\n        <button onClick={this.props.showLess}>Show Less</button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport './App.css';\nimport \"./styles.css\";\nimport MapChart from \"./MapChart\";\nimport filterCities from \"./filterCities\"\nimport CityResults from \"./CityResults\"\nimport allStates from \"./data/allStates.json\"\nimport countiesList from \"./data/countiesList\"\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: \"states\",\n      tooltip: \"Mouse over a state, county, or city.\",\n      size: 3,\n      coords: [],\n      query: \"\",\n      selectedState: \"\",\n      selectedCounty: \"\",\n      numResults: 20,\n      city: \"New York\",\n      stateID: \"NY\",\n      county: \"New York\",\n      id: \"\",\n      isSelected: false\n    };\n  }\n\n  componentDidMount() {\n    if (!localStorage) {\n      this.setState({\n        coords: []\n      })\n    }\n    else {\n      try {\n        const cities = localStorage.getItem('cities') || ''\n        this.setState({\n          coords: JSON.parse(cities)\n        })\n      }\n      catch (err) {\n        this.setState({\n          coords: []\n        })\n      }\n\n    }\n\n  }\n\n  handleSizeChange = event => {\n    this.setState({\n      size: event.target.value\n    })\n  }\n\n  handleStateChange = event => {\n    if (event.target.value === \"Select state\") {\n      this.setState({\n        selectedState: \"\",\n        selectedCounty: \"\"\n      })\n    }\n    else {\n      this.setState({\n        selectedState: event.target.value,\n        selectedCounty: \"\"\n      })\n    }\n  }\n\n  handleSearchChange = event => {\n    if (event.target.name === \"selectedCounty\" && event.target.value === \"Select county\") {\n      this.setState({\n        ...this.state,\n        selectedCounty: \"\"\n      });\n    }\n    else {\n      this.setState({\n        ...this.state,\n        [event.target.name]: event.target.value\n      });\n    }\n  };\n\n  handleCityClick = loc => {\n    if (!this.state.coords.some((l) => l.id === loc.id)) {\n      const newCoords = this.state.coords.concat(loc)\n      this.setState({\n        coords: newCoords,\n      });\n      localStorage.setItem(\"cities\", JSON.stringify(newCoords))\n    }\n  };\n\n  handleMapClick = info => {\n    this.setState({\n      selectedState: info.state,\n      selectedCounty: info.county,\n      query: \"\"\n    });\n  }\n\n  handleRemove(id) {\n    const newCoords = this.state.coords.filter(cty => cty.id !== id)\n    this.setState({\n      coords: newCoords,\n      isSelected: false\n    });\n    localStorage.setItem(\"cities\", JSON.stringify(newCoords))\n  };\n\n  setInfo = info => {\n    this.setState({\n      city: info.city,\n      stateID: info.stateID,\n      county: info.county,\n      id: info.id,\n      isSelected: true\n    });\n  }\n\n  setContent = content => {\n    this.setState({\n      tooltip: content\n    })\n  }\n\n  clear() {\n    localStorage.removeItem(\"cities\");\n    this.setState({\n      coords: [],\n      isSelected: false\n    })\n  }\n\n  clearSearch() {\n    this.setState({\n      query: \"\",\n      selectedState: \"\",\n      selectedCounty: \"\"\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"header\">\n          <select name=\"selectedState\" value={this.state.selectedState} onChange={this.handleStateChange}>\n            {allStates.map(state => (\n              <option key={state.val}>{state.id}</option>\n            ))}\n          </select>\n          {this.state.selectedState === \"\" ? (\n            null\n          ) : (\n            <>\n              <select name=\"selectedCounty\" value={this.state.selectedCounty} onChange={this.handleSearchChange}>\n                {countiesList.filter(county => county.state_name === this.state.selectedState)\n                  .map(county => (\n                  <option key={county.fips}>{county.county_name}</option>\n                ))}\n              </select>\n            </>\n          )}\n          <input type=\"text\" placeholder=\"Search city\" value={this.state.query} name=\"query\" onChange={this.handleSearchChange}/>\n          <button onClick={()=>this.clearSearch()}>Clear Search</button>\n        </div>\n        <CityResults\n            citySelect={this.handleCityClick}\n            setInfo={this.setInfo}\n            cityData={filterCities(this.state.query,this.state.selectedState, this.state.selectedCounty,\n              this.state.numResults)}\n            showMore={() => this.setState({numResults: this.state.numResults + 10})}\n            showLess={() => this.setState({numResults: this.state.numResults - 10})}\n        />\n        \n        \n      </div>\n    );\n  }\n}\n","import citiesList from \"./data/citiesList.json\";\n\nexport default function filterCities(searchText, stateSearch, countySearch, maxResults) {\n  if (stateSearch !== \"\") {\n    if (countySearch !== \"\") {\n      return citiesList\n        .filter(city => {\n          if (city.CITY.toLowerCase().includes(searchText.toLowerCase())\n              && city.STATE_NAME.toLowerCase() === stateSearch.toLowerCase()\n              && countySearch.toLowerCase() === city.COUNTY.toLowerCase()) {\n            return true;\n          }\n          return false;\n        })\n        .slice(0, maxResults);\n    }\n    else {\n      return citiesList\n        .filter(city => {\n          if (city.CITY.toLowerCase().includes(searchText.toLowerCase())\n              && city.STATE_NAME.toLowerCase() === stateSearch.toLowerCase()) {\n            return true;\n          }\n          return false;\n        })\n        .slice(0, maxResults);\n    }\n\n  }\n  else {\n    return citiesList\n      .filter(city => {\n        if (city.CITY.toLowerCase().includes(searchText.toLowerCase())) {\n          return true;\n        }\n        return false;\n      })\n      .slice(0, maxResults);\n  }\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}