{"version":3,"sources":["MapChart.js","CityResults.js","App.js","filterCities.js","index.js"],"names":["MapChart","setTooltipContent","coords","remove","data-tip","projection","geography","geographies","map","geo","stroke","strokeWidth","fill","rsmKey","id","loc","city","stateID","coordinates","onMouseEnter","name","concat","onMouseLeave","onClick","r","memo","CityResults","lng","lat","cty","st","ct","inc","mil","info","county","incorporated","military","this","props","citySelect","setInfo","className","cityData","handleClick","state_id","county_name","population","React","Component","App","handleSearchChange","event","setState","state","target","value","handleCityClick","newCoords","handleRemove","filter","handleCheckbox","milOnly","checked","setContent","content","tooltip","query","selectedState","numResults","searchText","stateSearch","maxResults","isLAorAK","isLA","type","onChange","allStates","val","citiesList","toLowerCase","includes","state_name","slice","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.acad2461.chunk.js","sourcesContent":["import React, { memo } from \"react\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl =\r\n  \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\r\n\r\nconst MapChart = ({setTooltipContent, coords, remove}) => {\r\n  return (\r\n    <>\r\n      <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  stroke='#aaa'\r\n                  strokeWidth='0.5'\r\n                  geography={geo}\r\n                  fill={\"#d6d6d6\"}\r\n                />\r\n\r\n              ))\r\n            }\r\n          </Geographies>\r\n          {coords.map(({id, loc, city, stateID}) => (\r\n            <Marker\r\n            key = {id}\r\n            coordinates={loc}\r\n            onMouseEnter={() => {\r\n              const name = city.concat(\", \",stateID)\r\n              setTooltipContent(name);\r\n            }}\r\n            onMouseLeave={() => {\r\n              setTooltipContent(\"\");\r\n            }}\r\n            onClick={() => {\r\n              remove(id);\r\n              setTooltipContent(\"\");\r\n            }}\r\n            >\r\n            <circle r={3} fill=\"#0079d3\" stroke=\"#000\" strokeWidth={0.5} />\r\n            </Marker>\r\n          ))}\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MapChart);\r\n","import React from 'react';\r\nimport \"./CityResults.css\"\r\n\r\nexport default class CityResults extends React.Component {\r\n\r\n  handleClick(id, lng, lat, cty, st, ct, inc, mil) {\r\n    const loc = {\r\n      id: id,\r\n      loc: [lng, lat],\r\n      city: cty,\r\n      stateID: st\r\n    }\r\n    const info = {\r\n      city: cty,\r\n      stateID: st,\r\n      county: ct,\r\n      incorporated: inc,\r\n      military: mil\r\n    }\r\n    this.props.citySelect(loc)\r\n    this.props.setInfo(info)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"resultsList\">\r\n        {this.props.cityData.map(cityData => (\r\n          <div\r\n          key={cityData.id}\r\n          onClick={() => this.handleClick(cityData.id, cityData.lng,\r\n            cityData.lat, cityData.city, cityData.state_id,\r\n            cityData.county_name, cityData.incorporated, cityData.military)}\r\n          className=\"cityEntry\">\r\n            <h5>{cityData.city}, {cityData.state_id}</h5>\r\n            <h5>{cityData.population}</h5>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport './App.css';\r\nimport \"./styles.css\";\r\nimport MapChart from \"./MapChart\";\r\nimport filterCities from \"./filterCities\"\r\nimport CityResults from \"./CityResults\"\r\nimport allStates from \"./allStates.json\"\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tooltip: \"\",\r\n      coords: [],\r\n      query: \"\",\r\n      selectedState: \"\",\r\n      numResults: 20,\r\n      milOnly: \"FALSE\",\r\n      city: \"New York\",\r\n      stateID: \"NY\",\r\n      county: \"New York\",\r\n      incorporated: \"TRUE\",\r\n      military: \"FALSE\"\r\n    };\r\n  }\r\n\r\n  handleSearchChange = event => {\r\n    this.setState({\r\n      ...this.state,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleCityClick = loc => {\r\n    const newCoords = this.state.coords.concat(loc)\r\n    this.setState({\r\n      coords: newCoords\r\n    });\r\n  };\r\n\r\n  handleRemove = id => {\r\n    const newCoords = this.state.coords.filter(cty => cty.id !== id)\r\n    this.setState({\r\n      coords: newCoords\r\n    });\r\n  };\r\n\r\n  handleCheckbox = event => {\r\n    this.setState({\r\n      milOnly: event.target.checked ? \"TRUE\" : \"FALSE\"\r\n    });\r\n  }\r\n\r\n  setInfo = info => {\r\n    this.setState({\r\n      city: info.city,\r\n      stateID: info.stateID,\r\n      county: info.county,\r\n      incorporated: info.incorporated,\r\n      military: info.military\r\n    })\r\n  }\r\n\r\n  setContent = content => {\r\n    this.setState({\r\n      tooltip: content\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const isLAorAK = this.state.stateID === \"LA\" || this.state.stateID === \"AK\"\r\n    const isLA = this.state.stateID === \"LA\"\r\n    return (\r\n      <div className=\"base\">\r\n        <div className=\"container\">\r\n          <h1>Search</h1>\r\n          <div className=\"header\">\r\n            <input type=\"text\" name=\"query\" onChange={this.handleSearchChange}/>\r\n            <select name=\"selectedState\" onChange={this.handleSearchChange}>\r\n              {allStates.map(state => (\r\n                <option key={state.val}>{state.id}</option>\r\n              ))}\r\n            </select>\r\n            <select name=\"numResults\" onChange={this.handleSearchChange}>\r\n              <option>20</option>\r\n              <option>50</option>\r\n              <option>75</option>\r\n              <option>100</option>\r\n            </select>\r\n            <span>Military?</span>\r\n            <input type=\"checkbox\" name=\"milOnly\" onChange={this.handleCheckbox}/>\r\n          </div>\r\n          <CityResults\r\n          citySelect={this.handleCityClick}\r\n          setInfo={this.setInfo}\r\n          cityData={filterCities(this.state.query,this.state.selectedState,this.state.numResults,\r\n                                this.state.milOnly)}\r\n          />\r\n        </div>\r\n        <div className=\"container\">\r\n          <h1>Map</h1>\r\n          <div className=\"header\">\r\n            <span>{this.state.city}, {this.state.stateID}</span>\r\n            {isLAorAK ? isLA ? (\r\n              <>\r\n              <span>{this.state.county} Parish</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n              <span>{this.state.county} Borough</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n              <span>{this.state.county} County</span>\r\n              </>\r\n            )}\r\n            <span>Incorporated: {this.state.incorporated}</span>\r\n            <span>Military: {this.state.military}</span>\r\n          </div>\r\n          <MapChart\r\n          coords={this.state.coords}\r\n          setTooltipContent={this.setContent}\r\n          remove={this.handleRemove}\r\n          />\r\n          <ReactTooltip>{this.state.tooltip}</ReactTooltip>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import citiesList from \"./citiesList.json\";\r\n\r\nexport default function filterCities(searchText, stateSearch, maxResults, milOnly) {\r\n  if (milOnly === \"FALSE\") {\r\n    if (stateSearch !== \"\") {\r\n      return citiesList\r\n        .filter(city => {\r\n          if (city.city.toLowerCase().includes(searchText.toLowerCase())\r\n              && city.state_name.toLowerCase() === stateSearch.toLowerCase()) {\r\n            return true;\r\n          }\r\n          return false;\r\n        })\r\n        .slice(0, maxResults);\r\n    }\r\n    else {\r\n      return citiesList\r\n        .filter(city => {\r\n          if (city.city.toLowerCase().includes(searchText.toLowerCase())) {\r\n            return true;\r\n          }\r\n          return false;\r\n        })\r\n        .slice(0, maxResults);\r\n    }\r\n  }\r\n  else {\r\n    if (stateSearch !== \"\") {\r\n      return citiesList\r\n        .filter(city => {\r\n          if (city.city.toLowerCase().includes(searchText.toLowerCase())\r\n              && city.state_name.toLowerCase() === stateSearch.toLowerCase()\r\n              && city.military === \"TRUE\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        })\r\n        .slice(0, maxResults);\r\n    }\r\n    else {\r\n      return citiesList\r\n        .filter(city => {\r\n          if (city.city.toLowerCase().includes(searchText.toLowerCase())\r\n              && city.military === \"TRUE\") {\r\n            return true;\r\n          }\r\n          return false;\r\n        })\r\n        .slice(0, maxResults);\r\n    }\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App'\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}